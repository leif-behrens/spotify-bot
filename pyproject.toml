# Python Projekt Konfiguration für DevSecOps Tools
# CWE-16: Configuration - Sichere Tool-Konfiguration

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spotify-auto-discovery-bot"
version = "1.0.0"
description = "Security-focused Spotify Auto-Discovery Bot"
authors = [{name = "DevSecOps Team"}]
requires-python = ">=3.9"

# Black Code Formatter Konfiguration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude auto-generated files
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | venv
  | build
  | dist
)/
'''

# isort Import Sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

# Bandit Security Linter Konfiguration
[tool.bandit]
# CWE-798: Hardcoded Credentials Detection
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used - OK in development

# High severity only für weniger False Positives
severity = "medium"

# MyPy Type Checking Konfiguration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pylint Konfiguration für erweiterte Code-Qualität
[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name (zu strikt für Variablennamen)
    "R0903",  # too-few-public-methods (OK für Data Classes)
]

[tool.pylint.format]
max-line-length = 88

# Pytest Konfiguration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"
