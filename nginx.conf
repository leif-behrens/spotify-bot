# Nginx Konfiguration für Spotify Bot
# Sicherheitsorientiert nach OWASP-Guidelines
# CWE-200: Information Exposure Prevention

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security Headers - CWE-79: XSS Prevention
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self' https://cdn.jsdelivr.net; img-src 'self' data: https: blob:; connect-src 'self'" always;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance Optimierungen
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate Limiting - CWE-400: DoS Prevention (angepasst für Live-Updates)
    limit_req_zone $binary_remote_addr zone=api:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;

    # HTTP -> HTTPS Redirect
    server {
        listen 80;
        server_name _;

        # Security: Verberge Nginx-Version
        server_tokens off;

        location / {
            return 301 https://$host$request_uri;
        }

        # Let's Encrypt Challenge (falls später benötigt)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name _;

        # Security: Verberge Nginx-Version
        server_tokens off;

        # SSL Configuration
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # OCSP Stapling
        ssl_stapling off;  # Für self-signed Zertifikate deaktiviert
        ssl_stapling_verify off;

        # Security: Request Size Limits - CWE-400: Resource Exhaustion Prevention
        client_max_body_size 1m;
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;

        # Security: Timeout-Konfiguration
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;

        # Main Application
        location / {
            # Rate Limiting
            limit_req zone=general burst=5 nodelay;

            proxy_pass http://spotify-bot:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Security Headers für Proxy
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;

            # Timeout-Konfiguration
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Buffer-Konfiguration
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # API Endpoints mit angepasstem Rate Limiting für Live-Updates
        location /api/ {
            limit_req zone=api burst=10 nodelay;

            proxy_pass http://spotify-bot:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # API-spezifische Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Spotify OAuth Callback (Proxy zu Callback-Server)
        location /callback {
            proxy_pass http://spotify-bot:4444;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Callback-spezifische Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Static Files Caching
        location /static/ {
            proxy_pass http://spotify-bot:8000;
            proxy_set_header Host $host;

            # Caching für statische Dateien
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Security: Blockiere gefährliche Pfade
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /\.(?:htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Health Check Endpoint (intern)
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Custom Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
