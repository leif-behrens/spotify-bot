services:
  spotify-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spotify-bot-app
    restart: unless-stopped
    ports:
      - "4444:4444"  # Spotify Callback Port
    environment:
      # Spotify API Credentials - Ã„NDERN SIE DIESE!
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REDIRECT_URI=https://127.0.0.1:443/callback

      # Flask Configuration
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-your-super-secret-key-change-me}

      # Database
      - DATABASE_PATH=/app/data/spotify_bot.db

      # Logging
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/spotify_bot.log

      # Security
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      # Persistente Daten
      - spotify_data:/app/data
      - spotify_logs:/app/logs
      # SSL-Zertifikate (werden von nginx-ssl Service generiert)
      - ssl_certs:/app/certs:ro
    networks:
      - spotify_network
    depends_on:
      - nginx-ssl
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/status', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: spotify-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ssl_certs:/etc/nginx/certs:ro
      - spotify_logs:/var/log/nginx
    networks:
      - spotify_network
    depends_on:
      - spotify-bot
      - nginx-ssl
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-ssl:
    image: alpine:latest
    container_name: spotify-bot-ssl-generator
    volumes:
      - ssl_certs:/certs
      - ./scripts:/scripts:ro
    command: /scripts/generate-ssl.sh
    networks:
      - spotify_network
    restart: "no"

networks:
  spotify_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  spotify_data:
    driver: local
  spotify_logs:
    driver: local
  ssl_certs:
    driver: local
